- hosts: all
  become: true

  vars:
    user: ubuntu
    manifests_dir: manifests/

  collections:
    - kubernetes.core

  tasks:
    - name: install python-kubernetes
      apt:
        name:
          - python3-kubernetes
        state: present
        update_cache: yes
    - name: install python-yaml
      apt:
        name:
          - python3-yaml
        state: present

    - name: list manifests
      ansible.builtin.set_fact:
        k8s_manifests: "{{ lookup('ansible.builtin.fileglob', '{{ playbook_dir }}/../{{ manifests_dir }}/*.yaml', wantlist=True) }}"


    - name: Create Kafka namespace
      kubernetes.core.k8s:
        name: kafka
        kubeconfig: /home/{{ user }}/.kube/config
        api_version: v1
        kind: Namespace
        state: present

    - name: Install helm classically
      ansible.builtin.snap:
        name: helm
        classic: yes
        state: present

    - name: Add Strimzi Helm repo
      kubernetes.core.helm_repository:
        name: strimzi
        repo_url: https://strimzi.io/charts/

    - name: Update Helm repos
      shell: helm repo update

    - name: Install Strimzi Kafka Operator
      kubernetes.core.helm:
        name: kafka-operator
        kubeconfig: /home/{{ user }}/.kube/config
        chart_ref: strimzi/strimzi-kafka-operator
        release_namespace: kafka


    - name: Sync manifest dir
      ansible.builtin.synchronize:
        src: "../{{ manifests_dir }}"
        dest: "/home/{{ user }}/manifests"
        recursive: yes
      delegate_to: localhost
      vars:
        ansible_become: false

    - name: apply manifests
      kubernetes.core.k8s:
        kubeconfig: "/home/{{ user }}/.kube/config"
        state: present
        src: "/home/{{ user }}/{{ manifests_dir }}/{{ item | basename }}"
        namespace: default
      loop: "{{ k8s_manifests }}"
      loop_control:
        label: "{{ item | basename }}"

    - name: debug
      debug:
        msg: "All services applied!"
