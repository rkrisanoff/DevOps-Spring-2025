name: Get Yandex Cloud Metadata
run-name: Yandex Cloud Metadata for commit ${{ github.sha }}
on: [push]
jobs:
  setup-remote-info:
    runs-on: ubuntu-latest
    outputs:
      monitoring-ip: ${{ steps.monitoring-ip-getter.outputs.value}}
      sonar-token: ${{steps.sonar-token-getter.outputs.value}}
    steps:
      - name: Install yc
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash -s -- -i /opt/yc
          source "/home/runner/.bashrc"

      - name: List All Compute Instances
        run: |
          /opt/yc/bin/yc \
            --token ${{ secrets.YC_OATH_TOKEN }} \
            --folder-id ${{ secrets.YC_FOLDER_ID }} \
            --cloud-id ${{ secrets.YC_CLOUD_ID }} \
            compute instance list

      - name: Get Monitoring-VM IP
        id: monitoring-ip-getter
        run: |
          JSON_RESPONSE=$(
            /opt/yc/bin/yc \
              --token ${{ secrets.YC_OATH_TOKEN }} \
              --folder-id ${{ secrets.YC_FOLDER_ID }} \
              --cloud-id ${{ secrets.YC_CLOUD_ID }} \
              compute instance get monitoring-vm --format json
          )
          MONITORING_IP=$(echo "$JSON_RESPONSE" | jq -r '.network_interfaces[0].primary_v4_address.one_to_one_nat.address')
          echo "value=$MONITORING_IP" >> $GITHUB_OUTPUT

      - name: Get Sonar Token
        id: sonar-token-getter
        # вытаскиваю переменную из соседнего step'а
        env:
          MONITORING_IP: ${{ steps.monitoring-ip-getter.outputs.value }}
        run: |
          mkdir -vm 700 /home/runner/.ssh
          ssh-keyscan -Ht ed25519 $MONITORING_IP > /home/runner/.ssh/known_hosts
          echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/id_ed25519
          chmod 600 /home/runner/.ssh/id_ed25519
          scp ubuntu@$MONITORING_IP:/home/ubuntu/sonar_token.txt /home/runner/sonar_token.txt
          echo "value=$(cat /home/runner/sonar_token.txt)" >> $GITHUB_OUTPUT


  example-usage-for-another-job:
    runs-on: ubuntu-latest
    needs: setup-remote-info
    # задаю переменные на весь job
    env:
      MONITORING_IP: ${{needs.setup-remote-info.outputs.monitoring-ip}}
      SONAR_TOKEN: ${{needs.setup-remote-info.outputs.sonar-token}}
    steps:
      - name: Echo Vars
        run: echo "Monitoring IP $MONITORING_IP, SonarQube Token $SONAR_TOKEN"
